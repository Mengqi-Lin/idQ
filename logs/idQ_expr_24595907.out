
The Gurobi software has a limited number of licenses. To request a license or
licenses, add this line

    #SBATCH --licenses=gurobi@slurmdb:1

to your SBATCH script, replacing N with the number of licenses you need. Gurobi
will need one license per process.


0
Q: [[0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 1 0 0 1]
 [0 0 1 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0]
 [0 0 0 1 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 1]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 1]
 [0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 1 0 0]
 [0 1 0 0 0 0 1 0 0 0]
 [0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 1 0]
 [0 1 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0]
 [0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 1]]
Set parameter TSPort to value 16325
Set parameter TokenServer to value "license-gurobi.dsc.umich.edu"
Set parameter SolutionLimit to value 1
Traceback (most recent call last):
  File "/home/lemonkey/idQ/py/idQ_expr.py", line 205, in <module>
    results = runtime_expr(J, K, N, p, seed, False)
  File "/home/lemonkey/idQ/py/idQ_expr.py", line 127, in runtime_expr
    status, Q_bar, branch = identifiability_expr(Q, fast)
  File "/home/lemonkey/idQ/py/idQ_expr.py", line 88, in identifiability_expr
    solution = solve_Q_identifiability(Q_sorted)
  File "/home/lemonkey/idQ/py/solve_Q_identifiability.py", line 228, in solve_Q_identifiability
    model.addConstr(quicksum(x[j, p] * (1 - x[j, q]) for j in range(J)) >= 1)
NameError: name 'quicksum' is not defined
